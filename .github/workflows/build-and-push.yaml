name: Build and Push
permissions: {}
on:
  repository_dispatch:
    types: [build-push-auth]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}
          fetch-depth: 2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/Pyxiris/slash-command-test
          tags: |
            type=raw,value=latest,enabled=true

      - name: Build and push Odoo image
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  post-pr-comment:
    name: Post comment to PR
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    needs:
      - build-and-push
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.PYXIRIS_APP_ID }}
          private-key: ${{ secrets.PYXIRIS_APP_SECRET }}
          permission-issues: write
          permission-pull-requests: write

      - name: Log Values
        run: |
          echo "Issue number is ${{ github.event.client_payload.github.payload.issue.number }}"
          echo "Repository is ${{ github.event.client_payload.github.payload.repository.full_name }}"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          edit-mode: append
          append-separator: newline
          token: ${{ steps.generate_token.outputs.token }}
          body: |
            
            ***

            Build result:
            The image has been built and pushed as:
            ```
            ${{ steps.meta.outputs.tag }}
            ```
            ${{ steps.meta.outputs.tag }}



  comment-on-fail:
    name: Comment on build fail
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    needs:
      - build-and-push

    if: ${{ needs.build-and-push.result == 'failure' }}
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.PYXIRIS_APP_ID }}
          private-key: ${{ secrets.PYXIRIS_APP_SECRET }}
          permission-issues: write
          permission-pull-requests: write

      - name: Create comment on build fail
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          edit-mode: append
          append-separator: newline
          token: ${{ steps.generate_token.outputs.token }}
          body: |
            
            ***

            Build result:
            The image build or push has **failed**. Please check the workflow run for details.
